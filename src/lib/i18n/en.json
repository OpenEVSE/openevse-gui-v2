{
    "active": "Active",
    "disabled": "Disabled",
    "disable": "Disable",
    "enabled": "Enabled",
    "standby": "Standby",
    "enable": "Enable",
    "pause": "Pause",
    "sleep": "Sleep",
    "state": "State",
    "save": "Save",
    "update": "Update",
    "new": "New",
    "close": "Close",
    "cancel": "Cancel",
    "back": "Back",
    "session": "Session",
    "total": "Total",
    "value": "Value",
    "show": "Show",
    "error": "Error",
    "warning": "Warning",
    "notification": "Notification",
    "yes": "Yes",
    "no": "No",
    "connected": "connected",
    "not-connected": "not connected",
    "none": "none",
    "alert-evsemissing-title": "Missing OpenEVSE module",
    "alert-evsemissing-body": "OpenEVSE module is missing. Please check your setup before going further",
    "alert-conerror-title": "Connection error",
    "alert-conerror-body": "Websocket  disconnected, waiting for reconnection",
    "alert-error": "EVSE error",
    "alert-portrait-title": "Warning",
    "alert-portrait-body": "This application has been designed for portrait mode",
    "charge-title": "Charge Session",
    "charge-toggle": "Toggle Charge",
    "charge-enable": "Enable Charge",
    "charge-disable": "Disable Charge",
    "charge-auto": "AUTO (let OpenEVSE decide)",
    "charge-mode-fast": "fast",
    "charge-mode-eco": "eco",
    "charge-mode-fast-ttip": "Disable Eco mode",
    "charge-mode-eco-ttip": "Enable Eco mode",
    "charge-shaper": "shaper",
    "charge-shaper-disable": "Disable Shaper",
    "charge-shaper-enable": "Enable Shaper",
    "charge-rate-label": "CHARGE RATE",
    "charge-rate-ttip": "Adjust Charge Rate",
    "charge-time-lmt": "TIME LIMIT",
    "charge-energy-lmt": "ENERGY LIMIT",
    "scheduler-title": "Scheduler",
    "scheduler-timer": "timer",
    "scheduler-newtimer": "new timer",
    "scheduler-time": "Time",
    "scheduler-state": "State",
    "scheduler-checkall": "Check All",
    "scheduler-uncheckall": "Uncheck All",
    "scheduler-empty": "No timers recorded",
    "days": {
        "monday": "monday",
        "tuesday": "tuesday",
        "wednesday": "wednesday",
        "thursday": "thursday",
        "friday": "friday",
        "saturday": "saturday",
        "sunday": "sunday"
    },
    "status-items-starting": "Starting",
    "status-items-waiting": "Waiting for EV",
    "status-items-ready": "Ready to charge",
    "status-items-charging": "Charging",
    "status-items-error": "Error",
    "status-items-disabled": "EVSE disabled",
    "status-items-connected": "Vehicle connected",
    "status-items-notconnected": "No vehicle connected",
    "status-tile-elapsed": "elapsed",
    "status-tile-delivered": "delivered",
    "status-tile-current": "current",
    "status-tile-power": "power",
    "status-tile-setpoint": "setpoint",
    "status-tile-shaper": "Shaper",
    "status-tile-selfprod": "Production",
    "status-tile-divert-available": "Production Avl",
    "status-tile-battery": "battery",
    "status-tile-range": "range",
    "status-tile-remaining": "remaining",
    "status-task-rfid-msg": "Waiting for RFID badge",
    "status-task-rfidok-msg": "RFID badge ok, enabling charge",
    "status-task-timer-activated": "Activated since",
    "status-task-timer-disabled": "Disabled since",
    "status-task-timer-activate": "Activate at",
    "status-task-timer-disable": "Disable at",
    "status-divert-production": "Production",
    "status-divert-grid": "Grid +Import/-Export",
    "status-current-available": "Available Current",
    "status-divert-smoothed": "Smoothed Current",
    "status-shaper-houseload": "House Load",
    "status-shaper-error": "Shaper: Live Power Load data has not been updated in time, EVSE has been disabled",
    "wizard-reload": "Quitting wizard. Seems we couldn't get the new ip address. Redirecting to hostname. When pressing OK, it will redirect in few seconds to ",
    "wizard-reload2": "If you're not in a browser window, clicking the link below will copy the link to your clipboard. You can then paste it in your browser",
    "clients": {
        "manual": "manual",
        "divert": "divert",
        "timer": "timer",
        "ohm": "ohm",
        "ocpp": "ocpp",
        "rfid": "rfid",
        "mqtt": "mqtt",
        "shaper": "shaper",
        "limit": "limit",
        "boost": "fast",
        "default": "default"
    },
    "units": {
        "kwh": "kWh",
        "A": "A",
        "V": "V",
        "W": "W",
        "km": "km",
        "miles": "miles",
        "C": "°C"
    },
    "limits": {
        "limit": "LIMIT",
        "system-limit": "SYSTEM LIMIT",
        "set": "Set limit",
        "hours": "hours",
        "minutes": "minutes",
        "input-energy": "Nb of kWh",
        "input-soc": "Battery",
        "input-range": "Range",
        "left": "Left",
        "type": {
            "none": "None",
            "time": "Time",
            "energy": "Energy",
            "soc": "Battery",
            "range": "Range"
        }
    },
    "monitoring-title": "monitoring",
    "monitoring-tab-data": "Data",
    "monitoring-tab-sensors": "Sensors",
    "monitoring-tab-safety": "Safety",
    "monitoring-tab-manager": "Commands",
    "monitoring-manager-service": "Service",
    "monitoring-manager-prop": "Property",
    "monitoring-manager-val": "Value",
    "monitoring-service": "Service",
    "monitoring-service-servicemin": "Level 2 Minimum",
    "monitoring-service-servicemax": "Level 2 Maximum",
    "monitoring-energy-delivered": "Energy Meter",
    "monitoring-service-level": "Level",
    "monitoring-sensors-pilot": "Control Pilot",
    "monitoring-sensors-current": "Current",
    "monitoring-sensors-voltage": "Voltage",
    "monitoring-sensors-evsetemp": "Main T°",
    "monitoring-sensors-sensorscale": "Current Scale",
    "monitoring-sensors-sensoroffset": "Current Offset",
    "monitoring-total-day": "Today",
    "monitoring-total-week": "Week",
    "monitoring-total-month": "Month",
    "monitoring-total-year": "Year",
    "logs-title": "History",
    "logs-loading": "Loading Data",
    "logs-time": "Time",
    "logs-type": "Type",
    "logs-status": "Status",
    "logs-energy": "Energy",
    "logs-temp": "Temperature",
    "logs-T": "T°",
    "logs-types": {
        "information": "information",
        "notification": "notification",
        "warning": "warning"
    },
    "logs-states": {
        "loading": "Starting",
        "active-nocar": "Active - Car not connected",
        "active-car": "Active - Car connected",
        "active-charge": "Charging",
        "error": "Error",
        "error-vent": "Ventilation required",
        "error-diode": "Diode check failed",
        "error-relay": "Stuck Relay",
        "error-gfi": "GFCI fault",
        "error-gfitest": "GFCI self-test failed",
        "error-ground": "Earth Ground check failed",
        "error-temp": "Over Temperature",
        "error-current": "Over Current",
        "sleeping": "Disabled - Sleeping",
        "disabled": "Disabled"
    },
    "config": {
        "titles": {
            "network": "Network",
            "firmware": "Firmware",
            "firmware-update": "Firmware Update",
            "evse": "EVSE",
            "safety": "Safety",
            "time": "Time",
            "http": "HTTP",
            "mqtt": "MQTT",
            "rfid": "RFID",
            "shaper": "Shaper",
            "selfprod": "Self Production",
            "ocpp": "OCPP",
            "vehicle": "Vehicle",
            "emon": "Energy Monitoring",
            "ohm": "OhmConnect",
            "dev": "Developer",
            "certificates": "Certificates",
            "about": "About"
        },
        "network": {
            "modes": {
                "ap": "Access Point (AP)",
                "sta": "Client (STA)",
                "staap": "Client + Access Point (STA+AP)",
                "wired": "Wired Ethernet"
            },
            "mode": "Mode",
            "ssid": "SSID",
            "channel": "Channel",
            "signal": "Signal",
            "change": "Change WiFi Network",
            "ip": "IP address",
            "mac": "MAC address",
            "connected": "Connected",
            "host": "Host Name",
            "scanning": "Scanning Networks",
            "failed": "No network found, scan again",
            "ssid-desc": "WiFi SSID",
            "pass": "WiFi Password",
            "pass-desc": "WPA Key",
            "apssid": "AP SSID",
            "appass": "AP password",
            "apdefault": "If unset, default to SSID: openevse-[chipID], password: openevse",
            "connect": "Connect",
            "scan": "Scan",
            "connecting": "Connecting, please wait...",
            "con-failed": "Couldn't connect to network ",
            "con-ok": "Connection successful. Wait for your device to be reconnected to the WiFi network, then press OK to be redirected to "
        },
        "firmware": {
            "hardware": "Hardware",
            "version": "Version",
            "action": "Action",
            "restart": "Restart",
            "reset": "Reset",
            "update": "Update",
            "install": "Direct Install",
            "up2date": "Up to date",
            "espinfo": "ESP info",
            "build": "Build",
            "installed": "Installed",
            "latest": "Latest",
            "nofile": "No file selected",
            "upgrade2": "Upgrade to",
            "gh-install": "Auto Install from GitHub",
            "confirm": "Confirm?",
            "httpota-start": "Starting update...",
            "installation": "Installation",
            "progress": "Firmware update in progress...",
            "failed": "Upload failed",
            "complete": "Firmware upgrade successful, page will reload in few sec",
            "remove": "Remove file",
            "upload": "Upload",
            "reset-warning": "This will reset device to factory default. All configuration will be lost. Please confirm",
            "reset-reboot": "Device will reboot to it's factory state in few seconds",
            "backup": "Configuration Backup",
            "export": "Backup",
            "import": "Import",
            "backup-desc": "Warning! It won't backup any passwords & keys"
        },
        "evse": {
            "maxcur": "Max Current",
            "maxcur-help": "Max current the hardware setup can handle",
            "random": "Scheduler Random start adjust",
            "random-help": "<p>The maximum number of seconds to randomly add/subtract from the a scheduled charge start time, eg a value of 600 will adjust the start time my +/- 10 minutes. This is to help prevent large syncronised loads when multiple vehicles start charging at the same time.</p>",
            "pause-help": "<p>Some vehicles will shutdown if left in sleep mode (pilot signal enable) and can not be woken up thereafter by the charger.</p><br><p>Changing the pause state to disable should resolve this issue.<br>However this removes the ability for the charger to detect if a vehicle is connected when paused.</p>",
            "seconds": "seconds",
            "service": "Service Level",
            "pause": "Pause Status",
            "led-bn": "Led Brightness",
            "led-bn-help": "RGB leds brightness (not related to LCD panel brightness)",
            "scale": "Adjust current sensor scale and offset",
            "sensorscale": "Current scale",
            "sensoroffset": "Current offset",
            "threephase": "Three-phase",
            "threephase-help": "Enable this switch when charging with three phases to get correct power calculation",
            "defaultstate": "Default State",
            "defaultstate-help": "OpenEVSE will take this default state when there is no pending command",
            "limit-help": "Set charge limit that will survive reboot"
        },
        "safety": {
            "test": "Test",
            "gfci-test": "GFCI Self Test",
            "gnd-monitor": "Ground Monitoring",
            "stuck-detect": "Stuck Contact Detection",
            "temp-monitor": "Temperature Monitoring",
            "diode-check": "Diode Check",
            "vent-check": "Ventilation Check",
            "vent-requ": "Vent Required",
            "errors": "Errors",
            "count": "Count",
            "gfci": "GFCI",
            "noground": "No Ground",
            "stuck": "Stuck Contact",
            "switches": "Total Relay Toggles",
            "infos": "Infos",
            "warningmsg": "Not all the safety tests are enabled, please take extra care before charging your vehicle."
        },
        "time": {
            "date": "Date",
            "usebrowsertime": "Local time",
            "ntpserver": "NTP Server",
            "ntpserver-desc": "NTP server address",
            "settimefrom": "Set time from",
            "ntp": "NTP",
            "manual": "Manual",
            "local": "Local Time",
            "timezone": "Time Zone",
            "settime": "Save"
        },
        "http": {
            "enable": "Authentication",
            "settings": "Settings",
            "username": "Username",
            "password": "Password",
            "enablehttps": "Enable HTTPS",
            "nohttps": "HTTPS not supported on current firmware",
            "lang": "UI Language",
            "enable-ttip": "Enable HTTP authentication",
            "inputmax": "15 characters max",
            "errormsg": "Please set a username & password first",
            "missing-www_username": "Missing username",
            "missing-www_password": "Missing password"
        },
        "mqtt": {
            "missing-mqtt_server": "MQTT Host is missing",
            "missing-mqtt_port": "MQTT Port is missing",
            "missing-mqtt_topic": "MQTT Base Topic is missing",
            "connected": "Connected to mqtt server",
            "notconnected": "Not connected to mqtt server",
            "host": "Host",
            "port": "Port",
            "proto": "Protocol",
            "rejectselfsigned": "Reject self-signed certificates",
            "username": "Username",
            "password": "Password",
            "basetopic": "Base Topic",
            "basetopic-desc": "Topic where OpenEVSE will publish data",
            "announcetopic": "LWT/Announce Topic",
            "announcetopic-desc": "Topic where OpenEVSE will post announce data and LWT",
            "retain": "Retain published data",
            "topic-voltage": "Voltage Topic",
            "topic-voltage-desc": "Voltage MQTT topic to improve power calculations",
            "client-certificate": "Client Certificate"
        },
        "rfid": {
            "managetag": "Manage scanned tags",
            "scan": "Scan",
            "remove": "Remove",
            "register": "Register",
            "placetag": "Place your RFID tag on the scanner...",
            "scansuccess": "Tag scanned successfully",
            "tagregistered": "Tag already registered",
            "newtag": "New tag detected",
            "registeredtags": "Registered Tags",
            "removeall": "Remove All"
        },
        "shaper": {
            "updated": "Live Power Load data up to date, throttling current...",
            "notupdated": "Waiting for Live Power Load data",
            "load": "Load",
            "available": "Free",
            "shaperdesc": "Throttle charge current following your house loads to prevent exceeding what your energy plan can deliver.",
            "maxpower": "Max power allowed (W)",
            "livepower": "Live power load MQTT Topic (W)",
            "minpausetime": "Minimum pause time (sec)",
            "maxinterval": "Max data interval (sec)",
            "maxinterval-desc": "Max time between live power data before entering failsafe",
            "smoothing": "Input Filter Time constant",
            "smoothing-desc": "Time constant for the input filter used to get out of pause. more is longer to recover, less is shorter. Value of 0 means no filtering",
            "missing-current_shaper_max_pwr": "Max Power value missing",
            "missing-mqtt_live_pwr": "Live power MQTT topic missing",
            "missing-current_shaper_min_pause_time": "Minimum pause time is missing",
            "missing-current_shaper_data_maxinterval": "Max data interval is missing",
            "help-mqtt": "If MQTT is not an option, you can HTTP POST {data} periodically to `/status`",
            "help-main": "<p>OpenEVSE can shape max current according to your real time house load, preventing to exceed the maximum power your energy plan can handle.</p><p>Once the module is enabled, it will need to receive live power total load data (in W) from an MQTT topic or HTTP post on /status endpoint.</p>"
        },
        "selfprod": {
            "desc": "Dynamically adjust charge rate based on self production or excess power (grid export).",
            "defaultmode": "Activate Eco mode at startup",
            "production": "Production",
            "excess": "Export",
            "grid": "Grid +Import/-Export",
            "modeboost": "ECO mode disabled",
            "disabled": "Charge Paused",
            "smoothed": "Smoothed",
            "lastupdated": "Last updated",
            "mode": "Mode",
            "feed": "Feed",
            "feed-prod-desc": "Self Production MQTT topic (in W) to modulate charge rate based on production",
            "feed-excess-desc": "Grid (+I/-E) MQTT topic to modulate charge rate based on excess power",
            "powerratio": "Required PV power ratio",
            "powerratio-desc": "The fraction of PV current that suffices to start charging or increment current",
            "smoothattack": "Divert smoothing attack (sec)",
            "smoothattack-desc": "The time constant value used for the input filter when increasing power (in sec). Value of 0 means no filtering",
            "smoothdecay": "Divert smoothing decay (sec)",
            "smoothdecay-desc": "The time constant value used for the input filter when decreasing power (in sec). Value of 0 means no filtering",
            "minchargetime": "Minimum Charge Time",
            "minchargetime-desc": "The minimum amount of time (seconds) to charge the car once enabled via the self production divert. This can help minimise wear and tear on the EVSE.",
            "help-1": "If Production feed is available: charge rate is modulated based on energy produced.",
            "help-2": "If Excess Power feed is available: charge rate will be modulated by available excess power.",
            "help-3": "If EVSE is sleeping: charging will begin when solar PV / excess power > min charge rate.",
            "help-4": "Charging will pause if the excess power drops below the min charge rate for a period of time.",
            "help-5": "Note: It's assumed that EVSE power is included in the grid feed",
            "missing-divert_PV_ratio": "PV power ratio is missing",
            "missing-divert_attack_smoothing_time": "Divert smoothing attack is missing",
            "missing-divert_decay_smoothing_time": "Divert smoothing decay is missing",
            "missing-divert_min_charge_time": "Minimum Charge Time is missing",
            "missing-mqtt_solar": "Self Production MQTT topic is missing",
            "missing-mqtt_grid_ie": "Grid (+I/-E) MQTT topic is missing"
        },
        "vehicle": {
            "status": "Status",
            "setup": "Setup",
            "lastupdated": "Last updated",
            "vehicle": "Vehicle",
            "battery": "Battery Level",
            "range": "Battery Range",
            "timeleft": "Time to full charge",
            "mode": {
                "none": "None",
                "tesla": "Tesla",
                "mqtt": "MQTT",
                "http": "HTTP"
            },
            "contype": "Connection Type",
            "httppush": "HTTP Push",
            "httppush-desc-1": "To update manually vehicle data, send HTTP POST request to:",
            "httppush-desc-2": "containing json data in body:",
            "help-1": "The Tesla login may break from time-to-time as Tesla change their login API, hopefully OpenEVSE will be able to resolve the issue on our server, but should the login fail you can use a 3rd Party app to generate the appropriate tokens.",
            "help-2": "These can be entered in the `Advanced` section as an alternative method of logging in.",
            "rangeunit": "Range Unit",
            "topic-soc": "State of Charge topic",
            "topic-soc-desc": "The battery level of charge as a percentage",
            "topic-range": "Range topic",
            "topic-range-desc": "The range (on electric) of the vehicle based on the current battery level",
            "topic-time2charge": "Time to charge topic",
            "topic-time2charge-desc": "The time until the battery is fully charged in seconds",
            "tesla-fetching": "Fetching vehicle info...",
            "tesla-select": "Select Vehicle",
            "tesla-fetching-error": "Error fetching vehicles",
            "tesla-fetching-novehicle": "No vehicle found",
            "logout": "Logout",
            "login": "Login",
            "username": "Username",
            "username-desc": "Tesla username",
            "password": "Password",
            "password-desc": "Tesla password",
            "advanced": "Advanced",
            "normal": "Normal",
            "access-token": "Access Token",
            "refresh-token": "Refresh Token"
        },
        "emon": {
            "connected": "Connected",
            "posts": "Posts",
            "server": "Emoncms Server",
            "node": "Node",
            "apikey": "Write API Key",
            "missing-emoncms_server": "Emoncms Server is missing",
            "missing-emoncms_node": "Emoncms Node is missing",
            "missing-emoncms_apikey": "API Key is missing"
        },
        "ohm": {
            "desc": "OhmConnect monitors real-time conditions on the electricity grid. When dirty and unsustainable power plants turn on, our users receive a notification to save energy.",
            "ohmhour": "Ohm Hour",
            "ohmkey": "Ohm Key",
            "ohmkey-desc": "Ohm Key can be obtained by logging in to OhmConnect, enter Settings and locate the link in 'Open Source Projects'.",
            "example": "Example",
            "key": "Key",
            "missing-ohm": "Ohm Key is missing"
        },
        "dev": {
            "rapi-cmd": "RAPI Commands",
            "send": "Send",
            "clear": "Clear",
            "consoles": "Consoles",
            "exportdata": "Export all data",
            "export": "Export"
        },
        "ocpp": {
            "server": "Central System URL",
            "chargeBoxId": "Charge Box ID",
            "authkey": "Authentication Key",
            "authkey-desc": "WebSocket Key (Security Profile 2)",
            "auth": "Charge Authorization",
            "auth-auto": "Authorize automatically",
            "idtag": "ID-Tag",
            "auth-offline": "Skip Authorization when offline",
            "controls": "Controls",
            "suspend-evse": "OCPP can suspend EVSE",
            "energize-plug": "OCPP can energize plug",
            "connected": "Connected",
            "missing-ocpp_server": "missing OCPP server url",
            "missing-ocpp_chargeBoxId": "missing Charge Box ID",
            "missing-ocpp_authkey": "missing Auth Key",
            "missing-ocpp_idtag": "missing Id Tag"
        },
        "certificates": {
            "id": "Id",
            "type": "Type",
            "name": "Name",
            "name_placeholder": "Certificate name",
            "root": "Root",
            "client": "Client",
            "add": "Add Certificate",
            "certificate": "Certificate",
            "private_key": "Private key",
            "upload": "new certificate",
            "empty": "No custom certificates",
            "missing-name": "Certificate name is missing",
            "missing-certificate": "Certificate is missing",
            "missing-private_key": "Private key is missing",
            "error": "Error adding certificate"
        }
    }
}
